// git init
// git status
// git add
// git commmit -m ''

// git log
// git show
// git diff

// working directory
// staging area
// git repository

// git checkout -- ''
// git reset HEAD ''

// git checkout -b <branch> (branching)
// git checkout <branch>
// git merge
A <--- B
git checkout A
git merge B
master <--- feature/dog-class
// git branch -D <branch> (Delete branch)

// git reset --soft <to-commmit>(staging)
// git reset --mixed <to-commmit>(working directory)
// git reset --hard <to-commmit>

// git revert <commmit>

// .gitignore

// git remote add origin ...
// git push

// git config --global credential.helper store
// ^^^ no recommend (~./git-credentials)
// git config --global credential.helper "cache --timeout=18000"
// google "gnome-keyring" "git ssh"

// git clone
// git pull

// pull request
// 1. git checkout -b <feature_branch>
// 2. git push origin <branch>
// 3. create pull request on Github
// 4. review code
        4.1 review code online 
        4.2 fetch branch into local to test offline 
        4.3 approve pull request
// 5. merge to master

// Resolve conflicts
when will conflicts happen?
    1. Changing the same file + same line
    2. A deleted file X, B modifiled file X
Method 1:
    1. Using `git rebase`
    2. Resolve conflict
    3. Push again with -f
Method 2:
    1. Merge update master to feature branch
    2. Resolve conflict
    3. Commit and push